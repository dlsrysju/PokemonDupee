/**The given class, Error Inventory is the GUI when only 1 creatures is in the inventory and the user attempts to change creature
 * <p>
 * It consists attributes that handles for the actions in each GUI
 * <ul>
 * </ul>
 * @author De los Reyes, Carl Justin B.
 * </p>
 * */

import java.awt.event.ActionListener;

public class ErrorInventoryGUI extends javax.swing.JFrame {

    /**
     * Creates new form ErrorInventoryGUI
     */
    public ErrorInventoryGUI() {
        initComponents();
        setSize(415, 235);
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */

    private void initComponents() {

        background = new javax.swing.JPanel();
        returntoinventory = new javax.swing.JButton();
        note = new javax.swing.JLabel();
        error = new javax.swing.JLabel();
        returntomenu = new javax.swing.JButton();
        error2 = new javax.swing.JLabel();
        cloud3 = new javax.swing.JLabel();
        cloud2 = new javax.swing.JLabel();
        clouds = new javax.swing.JLabel();
        clouds1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        background.setBackground(new java.awt.Color(214, 232, 232));
        background.setLayout(null);

        returntoinventory.setBackground(new java.awt.Color(0, 102, 102));
        returntoinventory.setForeground(new java.awt.Color(255, 255, 255));
        returntoinventory.setText("Return to Inventory");
        returntoinventory.setFocusPainted(false);

        background.add(returntoinventory);
        returntoinventory.setBounds(20, 140, 160, 30);

        note.setFont(new java.awt.Font("Lucida Sans", 0, 10)); // NOI18N
        note.setText("Note: Have atleast 2 creatures in your inventory!");
        background.add(note);
        note.setBounds(90, 90, 420, 13);

        error.setFont(new java.awt.Font("Franklin Gothic Medium", 1, 18)); // NOI18N
        error.setForeground(new java.awt.Color(204, 0, 51));
        error.setText("You only have 1 creature in your inventory,");
        error.setName(""); // NOI18N
        error.setPreferredSize(new java.awt.Dimension(130, 16));
        background.add(error);
        error.setBounds(30, 20, 430, 60);

        returntomenu.setBackground(new java.awt.Color(0, 102, 102));
        returntomenu.setForeground(new java.awt.Color(255, 255, 255));
        returntomenu.setText("Return to Menu");
        returntomenu.setFocusPainted(false);

        background.add(returntomenu);
        returntomenu.setBounds(220, 140, 160, 30);

        error2.setFont(new java.awt.Font("Franklin Gothic Medium", 1, 18)); // NOI18N
        error2.setForeground(new java.awt.Color(204, 0, 0));
        error2.setText("you cannot change active creature!");
        error2.setName(""); // NOI18N
        error2.setPreferredSize(new java.awt.Dimension(130, 16));
        background.add(error2);
        error2.setBounds(60, 40, 340, 60);

        cloud3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Orange and Green Modern Icons Food Logo (4).png"))); // NOI18N
        cloud3.setText("jLabel1");
        background.add(cloud3);
        cloud3.setBounds(220, 0, 240, 100);

        cloud2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Orange and Green Modern Icons Food Logo (4).png"))); // NOI18N
        cloud2.setText("jLabel1");
        background.add(cloud2);
        cloud2.setBounds(0, 0, 240, 140);

        clouds.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Orange and Green Modern Icons Food Logo (4).png"))); // NOI18N
        clouds.setText("jLabel1");
        background.add(clouds);
        clouds.setBounds(-10, 50, 150, 290);

        clouds1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Orange and Green Modern Icons Food Logo (4).png"))); // NOI18N
        clouds1.setText("jLabel1");
        background.add(clouds1);
        clouds1.setBounds(260, 50, 240, 290);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(background, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addComponent(background, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }

    public void returntoinventoryActionListener(ActionListener listener) {
        returntoinventory.addActionListener(listener);
    }

    public void setReturntomenuActionListener(ActionListener listener) {
        returntomenu.addActionListener(listener);
    }


    // Variables declaration - do not modify
    private javax.swing.JPanel background;
    private javax.swing.JLabel cloud2;
    private javax.swing.JLabel cloud3;
    private javax.swing.JLabel clouds;
    private javax.swing.JLabel clouds1;
    private javax.swing.JLabel error;
    private javax.swing.JLabel error2;
    private javax.swing.JLabel note;
    private javax.swing.JButton returntoinventory;
    private javax.swing.JButton returntomenu;
    // End of variables declaration
}
